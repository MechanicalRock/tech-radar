// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`StaticSiteStack should match the template snapshot 1`] = `
"Resources:
  OriginAccessIdentity:
    Type: 'AWS::CloudFront::CloudFrontOriginAccessIdentity'
    Properties:
      CloudFrontOriginAccessIdentityConfig:
        Comment: Cloud front user which will be allowed to access the site s3 bucket
  StaticSiteBucket8958EE3F:
    Type: 'AWS::S3::Bucket'
    Properties:
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
    DeletionPolicy: Retain
  StaticSiteBucketPolicy54AA1C72:
    Type: 'AWS::S3::BucketPolicy'
    Properties:
      Bucket:
        Ref: StaticSiteBucket8958EE3F
      PolicyDocument:
        Statement:
          - Action: 's3:GetObject'
            Effect: Allow
            Principal:
              CanonicalUser:
                'Fn::GetAtt':
                  - OriginAccessIdentity
                  - S3CanonicalUserId
            Resource:
              'Fn::Join':
                - ''
                - - 'Fn::GetAtt':
                      - StaticSiteBucket8958EE3F
                      - Arn
                  - /*
        Version: '2012-10-17'
  LogsBucket9C4D8843:
    Type: 'AWS::S3::Bucket'
    Properties:
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
    DeletionPolicy: Retain
  staticsitecloudfrontCFDistributionF34126D3:
    Type: 'AWS::CloudFront::Distribution'
    Properties:
      DistributionConfig:
        Aliases:
          - techradar.cloud
          - www.techradar.cloud
        CacheBehaviors: []
        Comment: Cloud front distribution for static website
        CustomErrorResponses:
          - ErrorCode: 404
            ResponseCode: 200
            ResponsePagePath: /
        DefaultCacheBehavior:
          AllowedMethods:
            - GET
            - HEAD
            - OPTIONS
          CachedMethods:
            - GET
            - HEAD
            - OPTIONS
          Compress: true
          ForwardedValues:
            Cookies:
              Forward: none
            QueryString: false
          TargetOriginId: origin1
          ViewerProtocolPolicy: redirect-to-https
        DefaultRootObject: index.html
        Enabled: true
        HttpVersion: http2
        IPV6Enabled: true
        Logging:
          Bucket:
            'Fn::GetAtt':
              - LogsBucket9C4D8843
              - DomainName
          IncludeCookies: false
        Origins:
          - DomainName:
              'Fn::GetAtt':
                - StaticSiteBucket8958EE3F
                - DomainName
            Id: origin1
            S3OriginConfig:
              OriginAccessIdentity:
                'Fn::Join':
                  - ''
                  - - origin-access-identity/cloudfront/
                    - Ref: OriginAccessIdentity
        PriceClass: PriceClass_All
        ViewerCertificate:
          AcmCertificateArn: >-
            arn:aws:acm:us-east-1:598112752826:certificate/da98edf4-7dc7-4ee8-95d6-82d96bc1a13b
          SslSupportMethod: sni-only
  HostedZoneDB99F866:
    Type: 'AWS::Route53::HostedZone'
    Properties:
      Name: techradar.cloud.
      HostedZoneConfig:
        Comment: 'Hosted zone for domain: techradar.cloud'
  CloudFrontAlias054CF186:
    Type: 'AWS::Route53::RecordSet'
    Properties:
      Name: techradar.cloud.techradar.cloud.
      Type: A
      AliasTarget:
        DNSName:
          'Fn::GetAtt':
            - staticsitecloudfrontCFDistributionF34126D3
            - DomainName
        HostedZoneId: Z2FDTNDATAQYW2
      HostedZoneId:
        Ref: HostedZoneDB99F866
Outputs:
  DistributionDomainName:
    Value:
      'Fn::GetAtt':
        - staticsitecloudfrontCFDistributionF34126D3
        - DomainName
"
`;
